[alias]
    a = add
    ap = add --patch
    aa = add -A

    acm = !git add . && git commit -m
    acv = !git add . && git commit -v

    bomb = reset --hard

    br = branch

    ci = commit
    cia = commit --amend
    cim = commit -m
    civ = commit -v

    co = checkout
    cob = checkout -b
    cod = checkout develop
    coh = checkout HEAD

    d = diff
    dc = diff --cached

    fe = fetch

    grconf = "!f(){ grep -lr '<<<<<<<' .; };f "

    la = log -1 -U

    l = log --graph --all --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(white)- %an, %ar%Creset'
    ll = log --stat --abbrev-commit
    lg = log --color --graph --pretty=format:'%C(bold white)%h%Creset -%C(bold green)%d%Creset %s %C(bold green)(%cr)%Creset %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    llg = log --color --graph --pretty=format:'%C(bold white)%H %d%Creset%n%s%n%+b%C(bold blue)%an <%ae>%Creset %C(bold green)%cr (%ci)' --abbrev-commit

    lc ="!f(){ printf \"\n\"; git status --porcelain | sed s/^...// | awk '{printf \"%5d : %s\\n\", NR, $0; if(NR%4 == 0){ print \"\";} }'; printf \"\n\";  };f"
    lcx="!f(){ git status --porcelain | sed s/^...// | sed -n $2 | xargs git $1; };f"

    ld="!f(){ printf \"\n\"; git diff --name-only | awk '{printf \"%5d : %s\\n\", NR, $0; if(NR%4 == 0){ print \"\";} }'; printf \"\n\"; };f"
    ldx="!f(){ git diff --name-only | sed -n $2 | xargs git $1; };f"

    mg = merge
    mgd = merge develop

    pl = pull

    pu = push
    puf = push -f 
    pusuo = git push --set-upstream origin

    rb = rebase
    rbcont = rebase --continue
    rbi = rebase -i
    rbid = rebase -i develop

    re = reset

    s = stash
    sli = stash list
    spa = stash --patch
    sp = stash pop

    san = "!sh -c 'git stash apply stash@{$1}' -"
    sdrn = "!sh -c 'git stash drop stash@{$1}' -"
    sski = stash save --keep-index

    st = status
    unstage = reset HEAD --
